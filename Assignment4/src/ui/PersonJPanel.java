/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.EncounterHistory;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author murali
 */
public class PersonJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PersonJPanel
     */
    JPanel userProcessContainer;
    PersonDirectory personDirectory;
    EncounterHistory encounterHistory;
    
    PersonDirectory pd;
    public PersonJPanel(PersonDirectory pd) {
        initComponents();
        this.pd = pd;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPerson = new javax.swing.JTable();
        btnViewPerson = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnUpdatePerson = new javax.swing.JButton();
        btnDeletePerson = new javax.swing.JButton();
        btnAddPerson = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtHouseNumber = new javax.swing.JTextField();
        txtFName = new javax.swing.JTextField();
        txtLName = new javax.swing.JTextField();
        txtHouseName = new javax.swing.JTextField();
        txtPinCode = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "FirstName", "LastName", "Age", "Address", "City"
            }
        ));
        jScrollPane1.setViewportView(tblPerson);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, 670, 167));

        btnViewPerson.setText("VIEW");
        btnViewPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPersonActionPerformed(evt);
            }
        });
        add(btnViewPerson, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 430, 80, 40));

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblTitle.setText("PERSON HISTORY");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, -1, -1));

        btnUpdatePerson.setText("UPDATE");
        btnUpdatePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePersonActionPerformed(evt);
            }
        });
        add(btnUpdatePerson, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 430, 90, 40));

        btnDeletePerson.setText("DELETE");
        btnDeletePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePersonActionPerformed(evt);
            }
        });
        add(btnDeletePerson, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 430, 100, 40));

        btnAddPerson.setText("ADD");
        btnAddPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPersonActionPerformed(evt);
            }
        });
        add(btnAddPerson, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 430, 80, 40));

        jLabel1.setText("House/Apartment Name:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 560, -1, -1));

        jLabel2.setText("House Number:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 510, -1, -1));

        jLabel3.setText("Pin Code:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 600, -1, -1));

        jLabel4.setText("Age:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 590, -1, 30));

        jLabel5.setText("LastName:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 550, -1, -1));

        jLabel6.setText("FirstName:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 510, -1, 20));

        txtHouseNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHouseNumberActionPerformed(evt);
            }
        });
        txtHouseNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHouseNumberKeyPressed(evt);
            }
        });
        add(txtHouseNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 510, 130, -1));

        txtFName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFNameKeyPressed(evt);
            }
        });
        add(txtFName, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 510, 170, -1));

        txtLName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLNameKeyPressed(evt);
            }
        });
        add(txtLName, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 550, 170, -1));

        txtHouseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHouseNameActionPerformed(evt);
            }
        });
        txtHouseName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHouseNameKeyPressed(evt);
            }
        });
        add(txtHouseName, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 550, 130, -1));

        txtPinCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPinCodeKeyPressed(evt);
            }
        });
        add(txtPinCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 600, 130, -1));

        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAgeKeyPressed(evt);
            }
        });
        add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 590, 90, -1));

        jLabel7.setText("City:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 650, -1, -1));

        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCityKeyPressed(evt);
            }
        });
        add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 640, 140, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeletePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePersonActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblPerson.getSelectedRow();
        
        if ( selectedRowIndex < 0 ){
            JOptionPane.showMessageDialog(this,"Please select a row to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblPerson.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedRowIndex , 0);
        
        pd.deletePerson(selectedPerson);

        JOptionPane.showMessageDialog(this,"Person deleted");
        
        populateTable();
    }//GEN-LAST:event_btnDeletePersonActionPerformed

    private void txtHouseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHouseNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHouseNameActionPerformed

    private void txtHouseNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHouseNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHouseNumberActionPerformed

    private void btnAddPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPersonActionPerformed
        // TODO add your handling code here:
        
        try{
        String fName = txtFName.getText();
        String lName = txtLName.getText();
        int age = Integer.parseInt(txtAge.getText());
        String houseNumber = txtHouseNumber.getText();
        String houseName = txtHouseName.getText();
        int pin = Integer.parseInt(txtPinCode.getText());
        String city = txtCity.getText();
        
        if(fName.trim().isEmpty() || lName.trim().isEmpty() || houseNumber.trim().isEmpty() || houseName.trim().isEmpty() || txtAge.getText().trim().isEmpty() || txtPinCode.getText().trim().isEmpty() ){
            
            JOptionPane.showMessageDialog(null,"Please enter all fields! Some fields are missing");
            return;
        }
        

        Person p = pd.addPerson();
        p.setFirstName(fName);
        p.setLastName(lName);
        p.setAge(age);
        p.setHouseNumber(houseNumber);
        p.setHouseName(houseName);
        p.setPin(pin);
        p.setCity(city);
        
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"Please check all inputs");
            return;
        }
        
        JOptionPane.showMessageDialog(this,"Person added");
        
        txtFName.setText("");
        txtLName.setText("");
        txtAge.setText("");
        txtHouseNumber.setText("");
        txtHouseName.setText("");
        txtPinCode.setText("");
        txtCity.setText("");
        
        populateTable();
    }//GEN-LAST:event_btnAddPersonActionPerformed

    private void btnViewPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPersonActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblPerson.getSelectedRow();
        
        if ( selectedRowIndex < 0 ){
            JOptionPane.showMessageDialog(this,"Please select a row to view");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblPerson.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedRowIndex , 0);
        
        
        txtFName.setText(selectedPerson.getFirstName());
        txtLName.setText(selectedPerson.getLastName());
        txtAge.setText(String.valueOf(selectedPerson.getAge()));
        txtHouseName.setText(selectedPerson.getHouseName());
        txtHouseNumber.setText(selectedPerson.getHouseNumber());
        txtPinCode.setText(String.valueOf(selectedPerson.getPin()));
        txtCity.setText(selectedPerson.getCity());
    }//GEN-LAST:event_btnViewPersonActionPerformed

    private void btnUpdatePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePersonActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblPerson.getSelectedRow();
        
        if ( selectedRowIndex < 0 ){
            JOptionPane.showMessageDialog(this,"Please select a row to update");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblPerson.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedRowIndex , 0);
        
        selectedPerson.setFirstName(txtFName.getText());
        selectedPerson.setLastName(txtLName.getText());
        selectedPerson.setAge(Integer.parseInt(txtAge.getText()));
        selectedPerson.setHouseNumber(txtHouseNumber.getText());
        selectedPerson.setHouseName(txtHouseName.getText());
        selectedPerson.setPin(Integer.parseInt(txtPinCode.getText()));
        selectedPerson.setCity(txtCity.getText());

        
        populateTable();
        
        txtFName.setText("");
        txtLName.setText("");
        txtAge.setText("");
        txtHouseNumber.setText("");
        txtHouseName.setText("");
        txtPinCode.setText("");
        txtCity.setText("");
    }//GEN-LAST:event_btnUpdatePersonActionPerformed

    private void txtFNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFNameKeyPressed
        // TODO add your handling code here:
        
        txtFName.setForeground(Color.black);
        char ch = evt.getKeyChar();
        if ( Character.isLetter(ch) || Character.isWhitespace(ch) || Character.isISOControl(ch)){
            txtFName.setEditable(true);
        }
        else{
            txtFName.setEditable(false);
        }
    }//GEN-LAST:event_txtFNameKeyPressed

    private void txtLNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLNameKeyPressed
        // TODO add your handling code here:
        txtLName.setForeground(Color.black);
        char ch = evt.getKeyChar();
        if ( Character.isLetter(ch) || Character.isWhitespace(ch) || Character.isISOControl(ch)){
            txtLName.setEditable(true);
        }
        else{
            txtLName.setEditable(false);
        }
        
    }//GEN-LAST:event_txtLNameKeyPressed

    private void txtAgeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyPressed
        // TODO add your handling code here:
        
        txtAge.setForeground(Color.black);
        String age = txtAge.getText();

        char ch = evt.getKeyChar();
        
        if(ch >= '0' && ch<='9'){
            if(age.length()<3)
               txtAge.setEditable(true);
            else
               txtAge.setEditable(false);
        }
        else{
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE)
                txtAge.setEditable(true);
            else
                txtAge.setEditable(false); 
        }
    }//GEN-LAST:event_txtAgeKeyPressed

    private void txtHouseNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHouseNumberKeyPressed
        // TODO add your handling code here:
        
        txtHouseNumber.setForeground(Color.black);
        String number = txtHouseNumber.getText();

        char ch = evt.getKeyChar();
        
        if(ch >= '0' && ch<='9'){
            if(number.length()<5)
               txtHouseNumber.setEditable(true);
            else
               txtHouseNumber.setEditable(false);
        }
        else{
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE)
                txtHouseNumber.setEditable(true);
            else
                txtHouseNumber.setEditable(false); 
        }
    }//GEN-LAST:event_txtHouseNumberKeyPressed

    private void txtPinCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPinCodeKeyPressed
        // TODO add your handling code here:
        
        txtPinCode.setForeground(Color.black);
        String number = txtPinCode.getText();

        char ch = evt.getKeyChar();
        
        if(ch >= '0' && ch<='9'){
            if(number.length()<5)
               txtPinCode.setEditable(true);
            else
               txtPinCode.setEditable(false);
        }
        else{
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE)
                txtPinCode.setEditable(true);
            else
                txtPinCode.setEditable(false); 
        }
    }//GEN-LAST:event_txtPinCodeKeyPressed

    private void txtHouseNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHouseNameKeyPressed
        // TODO add your handling code here:
//        txtHouseName.setForeground(Color.black);
//        char ch = evt.getKeyChar();
//        if ( Character.isLetter(ch) || Character.isWhitespace(ch) || Character.isISOControl(ch)){
//            txtHouseName.setEditable(true);
//        }
//        else{
//            txtHouseName.setEditable(false);
//        }
    }//GEN-LAST:event_txtHouseNameKeyPressed

    private void txtCityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyPressed
        // TODO add your handling code here:
        txtCity.setForeground(Color.black);
        char ch = evt.getKeyChar();
        if ( Character.isLetter(ch) || Character.isWhitespace(ch) || Character.isISOControl(ch)){
            txtCity.setEditable(true);
        }
        else{
            txtCity.setEditable(false);
        }
    }//GEN-LAST:event_txtCityKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPerson;
    private javax.swing.JButton btnDeletePerson;
    private javax.swing.JButton btnUpdatePerson;
    private javax.swing.JButton btnViewPerson;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblPerson;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtFName;
    private javax.swing.JTextField txtHouseName;
    private javax.swing.JTextField txtHouseNumber;
    private javax.swing.JTextField txtLName;
    private javax.swing.JTextField txtPinCode;
    // End of variables declaration//GEN-END:variables

private void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) tblPerson.getModel();
        model.setRowCount(0);
        
        for ( Person p : pd.getPersonDirectory()){
            
            Object[] row = new Object[5];
            row[0] = p;
            row[1] = p.getLastName();
            row[2] = p.getAge();
            row[3] = p.getHouseNumber()+", "+p.getHouseName()+", "+p.getPin();
            row[4] = p.getCity();
            
            model.addRow(row);
        }
    }
}